

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           Int          @id @default(autoincrement())
  name         String
  username     String       @unique
  email        String       @unique
  password     String
  applications Application[]
  hackathons   Hackathon[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}


model Otp{
   id        Int      @id @default(autoincrement())
  email      String 
  otp        String
  createdAt  DateTime     @default(now())
  @@unique([otp, email]) 
}

model Hackathon {
  id             Int          @id @default(autoincrement())
  teamName      String
  hackathonName  String
  regURL         String
  hackathonMode  String
  memberCount    String
  skills         String[]
  role           String
  experience     String
  regDate        DateTime
  location       String
  description    String
  Employer       User         @relation(fields: [Employerid], references: [id])
  Employerid     Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  applications   Application[]
}

model Application {
  id          Int      @id @default(autoincrement())
  candidate   User     @relation(fields: [candidateId], references: [id])
  candidateId Int
  post        Hackathon @relation(fields: [postId], references: [id])
  postId      Int
  skills      String
  coverLetter String
  status      ApplicationStatus @default(PENDING)
  createdAt   DateTime @default(now())
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
